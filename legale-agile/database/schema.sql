-- Legale Agile - Database Schema
-- PostgreSQL / Supabase

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Table: projects
-- Stores contract projects with templates and configurations
CREATE TABLE projects (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name TEXT NOT NULL,
  description TEXT,
  contracts JSONB NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Table: generated_contracts
-- Stores generated contracts from wizard completions
CREATE TABLE generated_contracts (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  project_id UUID REFERENCES projects(id) ON DELETE CASCADE,
  project_name TEXT NOT NULL,
  role TEXT NOT NULL CHECK (role IN ('A', 'B')),
  role_name TEXT NOT NULL,
  content TEXT NOT NULL,
  answers JSONB NOT NULL,
  generated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Indexes for better query performance
CREATE INDEX idx_projects_created_at ON projects(created_at DESC);
CREATE INDEX idx_generated_contracts_project_id ON generated_contracts(project_id);
CREATE INDEX idx_generated_contracts_generated_at ON generated_contracts(generated_at DESC);

-- Optional: Enable Row Level Security (RLS) for multi-user support in future
-- ALTER TABLE projects ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE generated_contracts ENABLE ROW LEVEL SECURITY;

-- Optional: Create policies for public access (no auth required for now)
-- CREATE POLICY "Enable read access for all users" ON projects FOR SELECT USING (true);
-- CREATE POLICY "Enable insert access for all users" ON projects FOR INSERT WITH CHECK (true);
-- CREATE POLICY "Enable update access for all users" ON projects FOR UPDATE USING (true);
-- CREATE POLICY "Enable delete access for all users" ON projects FOR DELETE USING (true);

-- Comments for documentation
COMMENT ON TABLE projects IS 'Stores contract project templates with Parte A and Parte B configurations';
COMMENT ON TABLE generated_contracts IS 'Stores completed contracts generated by users through the wizard';
COMMENT ON COLUMN projects.contracts IS 'JSONB containing full contract configuration for both Parte A and Parte B';
COMMENT ON COLUMN generated_contracts.answers IS 'JSONB containing all user answers including placeholder and clause responses';

-- Function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Trigger to automatically update updated_at
CREATE TRIGGER update_projects_updated_at BEFORE UPDATE ON projects
FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
